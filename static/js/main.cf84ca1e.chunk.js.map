{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","articleClassName","cn","completed","id","title","TodoList","todos","map","username","todosWithUsers","userId","usersFromServer","find","App","useState","setTodos","formData","setFormData","titleIsValid","setTitleIsValid","userIsValid","setUserIsValid","showTitleError","setShowTitleError","showUserError","setShowUserError","onSubmit","event","preventDefault","thisUser","thisId","sort","a","b","oldTodos","action","method","type","placeholder","value","onChange","target","trimStart","oldData","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf84ca1e.chunk.js","sourcesContent":["import { UserInfoProps } from '../../types';\n\nexport const UserInfo = ({ user }: UserInfoProps) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { TodoInfoProps } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const articleClassName\n    = cn('TodoInfo', { 'TodoInfo--completed': todo.completed });\n\n  return (\n    <article\n      data-id={todo.id}\n      className={articleClassName}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoListProps } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList = ({ todos }: TodoListProps) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => {\n          return (\n            <TodoInfo key={todo.id} todo={todo} />\n          );\n        })\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","// imports\nimport { FC, FormEvent, useState } from 'react';\nimport './App.scss';\nimport { User } from './types';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n// merging data from server\nconst todosWithUsers = todosFromServer\n  .map(todo => (\n    {\n      ...todo,\n      user: usersFromServer\n        .find(user => user.id === todo.userId),\n    }\n  ));\n\n// component\nexport const App: FC = () => {\n  // state\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [formData, setFormData] = useState({ title: '', user: '' });\n  const [titleIsValid, setTitleIsValid] = useState(false);\n  const [userIsValid, setUserIsValid] = useState(false);\n  const [showTitleError, setShowTitleError] = useState(false);\n  const [showUserError, setShowUserError] = useState(false);\n\n  // handlers\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.trimStart();\n\n    setShowTitleError(!!value);\n    setTitleIsValid(!!value);\n\n    setFormData(oldData => ({\n      ...oldData,\n      title: value,\n    }));\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setShowUserError(!!value);\n    setUserIsValid(!!value);\n\n    setFormData(oldData => ({\n      ...oldData,\n      user: value,\n    }));\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!titleIsValid || !userIsValid) {\n      if (!titleIsValid) {\n        setShowTitleError(true);\n      }\n\n      if (!userIsValid) {\n        setShowUserError(true);\n      }\n\n      return;\n    }\n\n    const thisUser = usersFromServer\n      .find(user => user.name === formData.user) as User;\n\n    const thisId = ([...todos].sort((a, b) => b.id - a.id)[0].id + 1);\n\n    setTodos(oldTodos => ([\n      ...oldTodos,\n      {\n        id: thisId,\n        title: formData.title,\n        completed: false,\n        userId: thisUser.id,\n        user: thisUser,\n      },\n    ]));\n\n    setFormData({\n      title: '',\n      user: '',\n    });\n\n    setTitleIsValid(false);\n    setUserIsValid(false);\n  };\n\n  // rendering the component\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={formData.title}\n              onChange={handleInputChange}\n            />\n            {\n              (showTitleError && !titleIsValid)\n              && <span className=\"error\">Please enter a title</span>\n            }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              id=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={formData.user}\n              onChange={handleSelectChange}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option key={user.id} value={user.name}>{user.name}</option>\n                ))\n              }\n            </select>\n            {\n              (showUserError && !userIsValid)\n              && <span className=\"error\">Please choose a user</span>\n            }\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}